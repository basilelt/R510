version: '3.8'

services:
  traefik:
    image: 192.168.56.101:5000/traefik:v2.10
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    networks:
      - traefik-public
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--log.level=DEBUG"

  django:
    image: 192.168.56.101:5000/django:3.12-alpine
    networks:
      - traefik-public
      - my_network
    depends_on:
        - db
        - traefik
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.django.rule=Host(`example.com`)"
        - "traefik.http.services.django.loadbalancer.server.port=8000"
        - "traefik.http.routers.django.entrypoints=web,websecure"
    environment:
        - DATABASE_HOST=my_stack_db
        - DATABASE_PORT=5432
        - DATABASE_NAME=mydatabase
        - DATABASE_USER=admin
        - DATABASE_PASSWORD_FILE=/run/secrets/postgres_password
        - DJANGO_SETTINGS_MODULE=modele.settings
    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    secrets:
        - postgres_password
    configs:
        - source: django_config
          target: /app/modele/settings.py
          mode: 0440

  db:
    image: 192.168.56.101:5000/postgres:17.0-alpine
    networks:
      - my_network
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB=mydatabase
    deploy:
      restart_policy:
        condition: on-failure
    secrets:
      - postgres_password


secrets:
  postgres_password:
    external: true

configs:
  proxy_conf:
    external: true
  django_config:
    external: true

networks:
  traefik-public:
    external: true
  my_network:

volumes:
  db: